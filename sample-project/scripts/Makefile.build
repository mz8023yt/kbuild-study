include $(srctree)/scripts/Makefile.include
-include include/config/auto.conf

#
# simplified printing information
#
ifeq ("$(origin V)", "command line")
  KBUILD_VERBOSE = $(V)
endif
ifndef KBUILD_VERBOSE
  KBUILD_VERBOSE = 0
endif

ifeq ($(KBUILD_VERBOSE),1)
  quiet =
  Q =
else
  quiet=quiet_
  Q = @
endif

#
# specify the output path
#
ifneq ($(KBUILD_OUTPUT),)
out         := $(KBUILD_OUTPUT)/
$(shell mkdir -p $(out)$(obj))
else
out         :=
endif

#
# recursive compilation
#
src		:= $(obj)

kbuild-dir  := $(if $(filter /%,$(src)),$(src),$(srctree)/$(src))

PHONY := build
build :

obj-y		:=
subdir-y	:=

include $(kbuild-dir)/Makefile

__subdir-y	:= $(patsubst %/,%,$(filter %/, $(obj-y)))
subdir-y	+= $(strip $(__subdir-y))
subdir-y	:= $(addprefix $(obj)/,$(subdir-y))
subdir_objs	:= $(foreach f,$(subdir-y),$(out)$(f)/built-in.o)
cur_objs	:= $(filter-out %/, $(obj-y))
cur_objs	:= $(addprefix $(out)$(obj)/,$(cur_objs))
dep_files	:= $(foreach f,$(cur_objs),.$(f).d)

PHONY += $(subdir-y)

build : $(subdir-y) $(out)$(obj)/built-in.o
$(subdir-y):
	$(Q)$(MAKE) $(mbuild)=$@

$(out)$(obj)/built-in.o : $(cur_objs) $(subdir_objs)
	$(call cmd,ld)

dep_file = $@.d

$(out)$(obj)/%.o : $(obj)/%.c
	$(call cmd,cc)

.PHONY : $(PHONY)

#
# simplified printing information
#
quiet_cmd_cc       = CC      $@
      cmd_cc       = $(CC) $(CFLAGS) $(EXCFLAGS) -Wp,-MMD,$(dep_file) -c -o $@ $<

quiet_cmd_ld       = LD      $@
      cmd_ld       = $(LD) -r -o $@ $^

cmd = @$(if $($(quiet)cmd_$(1)),echo '  $($(quiet)cmd_$(1))' &&) $(cmd_$(1))
